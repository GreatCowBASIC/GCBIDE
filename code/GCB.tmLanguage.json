{
    "scopeName": "source.gcb",
    "name": "Great Cow BASIC",
    "case_insensitive": false,
    "comments": {
        "block": {
            "begin": "/\\*",
            "end": "\\*/",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": false
        }
    },
    "patterns": [
        {
            "match": "/\\*[^*]*\\*/",
            "name": "comment.block.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": false
        },
        {
            "match": "REM .*$",
            "name": "comment.line.rem.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": true
        },
        {
            "match": "'\\s*REM .*$",
            "name": "comment.line.rem-quoted.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": true
        },
        {
            "match": "//.*$",
            "name": "comment.line.double-slash.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": false
        },
        {
            "match": "\\s*;.*$",
            "name": "comment.line.semicolon.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": false
        },
        {
            "match": "\\s*'.*$",
            "name": "comment.line.single-quote.gcb",
            "color": "#008000",
            "bold": false,
            "italic": true,
            "case_insensitive": false
        },
        {
            "comment": "string within double quotes",
            "match": "\"[^\"]*\"",
            "name": "string.quoted.double.gcb",
            "color": "#A4D65A",
            "bold": true,
            "italic": false,
            "case_insensitive": false
        },
        {
            "match": "#\\s*(chip|define|option(?:\\s+(explicit|volatile))?|include\\s+((?:<[^>]+>|\"[^\"]+\")))(?:\\s|$)",
            "name": "meta.preprocessor.gcb",
            "color": "#0000BB",
            "bold": true,
            "italic": false,
            "case_insensitive": true,
            "captures": {
                "2": {
                    "name": "string.include.gcb",
                    "color": "#0000BB",
                    "bold": true,
                    "italic": false
                }
            }
        },
        {
            "match": "\\b(PORTA\\.[0-7]|PORTB\\.[0-7]|PORTC\\.[0-7]|PORTD\\.[0-7]|PORTE\\.[0-7]|PORTF\\.[0-7]|PORTG\\.[0-7]|PORTH\\.[0-7])\\b",
            "name": "variable.language.port.gcb",
            "color": "#4EC9B0",
            "bold": true,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "\\b(LATA\\.[0-7]|LATB\\.[0-7]|LATC\\.[0-7]|LATD\\.[0-7]|LATE\\.[0-7]|LATF\\.[0-7]|LATG\\.[0-7]|LATH\\.[0-7])\\b",
            "name": "variable.language.lat.gcb",
            "color": "#4EC9B0",
            "bold": true,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "\\b(wait|TFT[_]\\S*|ILI9341[_]\\S*|AD_REF_SOURCE|31k|32.768k|Out|IN|ON|OFF|TRUE|FALSE|swap4|swap|USE_HPWMCCP[0-9]|USE_HPWM[0-9S]|USE_HPWM_TIMER[0-9]|USE_AD([0-9a-fA-F]|[0-9a-fA-F][0-9a-fA-F])|trim|ucase|Right|Rtrim|INKEY|INSTR|LCase|BIT|DEF|NODEF|_GLCDPage|_GLCDPagesH|_GLCDPagesL|ABS|ADOff|ALLOC|AllOf|Array|Asc|ATan|Average|BcdToDec_GCB|Box|ByteToBin|Call|canskip|ChipADC|ChipEEprom|ChipFamily|ChipIO|ChipMHz|ChipName|ChipNameStr|ChipOsc|ChipPins|ChipProgrammerNameStr|ChipRAM|ChipReserveHighProg|ChipUsingIntOsc|ChipWords|CHR|Circle|ClearSMT1|ClearSMT2|ClearTimer|CLS|cos|CreateButton|CURSOROFF|CURSORON|DecToBcd_GCB|Difference|Dir|DisplayChar|DisplayValue|DS18B20SetResolution|EERAM_AutoStore|EERAM_Backup|EERAM_HS|EERAM_HWStore|EERAM_I2C_Adr|EERAM_Read|EERAM_Recall|EERAM_Status|EERAM_Trecall|EERAM_Tstore|EERAM_Write|EERAM_Write_Command|Ellipse|EPRead|EPWrite|FAST|FastHWSPITransfer|Fill|FilledBox|FilledCircle|FilledEllipse|FilledTriangle|FillRoundRect|FLASH|FLASHOFF|FLASHON|FnLSL|FnLSR|Forever|FOSC|FOSC4|FVR_1x|FVR_2x|FVR_4x|FVR_off|FVRInitialize|FVRIsOutputReady|Get|GetUserID|GLCD_Close_PageTransaction|GLCD_NextionSerialPrint|GLCD_NextionSerialSend|GLCD_Open_PageTransaction|GLCDBackground|GLCDCLS|GLCDDisplay|GLCDDrawChar|GLCDDrawString|GLCDfntDefaultSize|GLCDFontWidth|GLCDForeground|GLCDGetTouch_Nextion|GLCDLocateString|GLCDLocateString_Nextion|GLCDPrint|GLCDPrint_Nextion|GLCDPrintDefaultFont_Nextion|GLCDPrintLargeFont|GLCDPrintString|GLCDPrintString_Nextion|GLCDPrintStringLn|GLCDPrintStringLn_Nextion|GLCDPrintWithSize|GLCDReadByte|GLCDRotate|GLCDSendOpInstruction_Nextion|GLCDSetContrast|GLCDTimeDelay|GLCDUpdateObject_Nextion|GLCDWriteByte|HEFEraseBlock|HEFRead|HEFReadBlock|HEFReadByte|HEFReadWord|HEFWrite|HEFWriteBlock|HEFWriteWord|Hex|HFINTOSC|HI2C2AckpollState|HI2C2Mode|HI2C2Receive|HI2C2ReStart|HI2C2Send|HI2C2SetAddress|HI2C2Start|HI2C2StartOccurred|HI2C2Stop|HI2C2Stopped|HI2C2WaitMSSP|HI2CAckpollState|HI2CMode|HI2CReceive|HI2CReStart|HI2CSend|HI2CSetAddress|HI2CStart|HI2CStartOccurred|HI2CStop|HI2CStopped|HI2CWaitMSSP|HI2CWaitMSSPTimeout|HLine|HPWM|HPWM_CCPTimerN|HPWM_Fast|HPWMOff|HPWMUpdate|HSerGetNum|HSerGetString|HSerPrint|HSerPrintByteCRLF|HSerPrintCRLF|HSerPrintStringCRLF|HSerReceive|HSerReceive1|HSerReceive2|HSerReceiveFrom|HSerSend|I2C_Adr_EERAM|I2CAckpoll|I2CReceive|I2CReset|I2CRestart|I2CSend|I2CSlaveDeviceReceive|I2CStart|I2CStartOccurred|I2CStop|Ignore|IndCall|InitGLCD|InitSer|InitSMT1|InitSMT2|InitTimer0|InitTimer1|InitTimer10|InitTimer12|InitTimer2|InitTimer3|InitTimer4|InitTimer5|InitTimer6|InitTimer7|InitTimer8|IntegerToBin|Interrupt|IntOff|IntOn|KeypadData|KeypadRaw|Landscape|Landscape_Rev|LCD_I2C_Address_1|LCD_I2C_Address_2|LCD_I2C_Address_3|LCD_I2C_Address_4|LCD_I2C_Address_Current|LCD_IO|LCD_SPEED|LCD_VARIANT|LCD_VFD_DELAY|LCDBacklight|LCDCMD|LCDCreateChar|LCDCreateGraph|LCDCursor|LCDDisplayOff|LCDDisplayOn|LCDHex|LCDHome|LCDOFF|LCDON|LCDSpace|LCDWriteChar|Left|LeftPad|Len|LFINTOSC|Line|Locate|LOCKPPS|Log10|Log2|Loge|LongtoBin|Ltrim|MEDIUM|MFINTOSC|Mid|MOD|NoBit|NoVar|OneOf|Optional|Pad|Peek|PFMErase|PFMRead|PFMWrite|Play|PlayRTTTL|Poke|Portrait|Portrait_Rev|Pot|Power|Print|ProgramErase|ProgramRead|ProgramWrite|PS2ReadByte|PS2SetKBLeds|PS2WriteByte|Pset|Pulsein|PulseOut|PulseOutInv|Put|PWMModule|PWMOff|PWMOn|PWMOut|Random|Randomize|ReadAD|ReadAD10|ReadAD12|ReadDigitalTemp|ReadTable|ReadTemp|ReadTemp12|Rotate|RoundRect|SAFEraseBlock|SAFRead|SAFReadBlock|SAFReadByte|SAFReadWord|SAFWrite|SAFWriteBlock|SAFWriteWord|Scale|Ser1Print|Ser1Receive|Ser1Send|Ser2Print|Ser2Receive|Ser2Send|Ser3Print|Ser3Receive|Ser3Send|SerPrint|SerReceive|SerSend|Set|SetSMT1|SetSMT1Period|SetSMT2|SetSMT2Period|SetTimer|SetWith|ShortTone|Simple|sin|SLOW|SOSC|SPIMode|SPITransfer|Sqrt|SRAMRead|SRAMWrite|StartSMT1|StartSMT2|StartTimer|Stopscroll_uc1601|StopSMT1|StopSMT2|StopTimer|Str|Str32|StrInteger|SWAP4|SYSDEFAULTCONCATSTRING|Timer0|Timer1|Timer10|Timer12|Timer2|Timer3|Timer4|Timer5|Timer6|Timer7|Timer8|Tone|Triangle|TxCKIPPS|UNLOCKPPS|Val|Val32|VarToBin|VarWToBin|Vline|Word|WORDTOBIN|RaiseCompilerError|tmSndDec|tmSndHex|tmSndDig|tmSndStr|tmSndChr|tmChrBuf|tmDecBuf|tmHexBuf|tmSegBuf|tmSndBuf|tmFlashDsp|tmFlashDig|tmFlashSeg|tmCLRbuf|tmCLRdisp|tmCtrlSnd|tmGetKey|tmScrlBuf|TM_1637_OEM_Lib-Variables|TM_DispLen|TM_6dReMap|TM_Blank0|TM_Bright|TM_Disp|TM_dpPos|TM_FlashRate|TM_scroll|TM_ScrollRate|TM_ButnVal|TM_KeyChk|TM_LEDs|TM_DispBuf)\\b(?![^\"]*\")",
            "name": "support.function.gcb",
            "color": "#569CD6",
            "bold": false,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "(>=|<=|<>)(?![^\"]*\")",
            "name": "keyword.operator.multi.gcb",
            "color": "#FF0000",
            "bold": true,
            "italic": false,
            "case_insensitive": false
        },
        {
            "match": "\\b(and|or)\\b(?![^\"]*\")",
            "name": "keyword.operator.word.gcb",
            "color": "#FF0000",
            "bold": true,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "(?<!\")([=\\+\\-])(?![^\"]*\")",
            "name": "keyword.operator.single.gcb",
            "color": "#FF0000",
            "bold": true,
            "italic": false,
            "case_insensitive": false
        },
        {
            "match": "\\b(as|at|asm|implements|import|let|redim|resume|scope|to|type|union|using|var|dim)\\b(?![^\"]*\")",
            "name": "keyword.other.gcb",
            "color": "#569CD6",
            "bold": false,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "\\b(do|else|return|for|exit|function|gosub|goto|if|loop|next|repeat|step|sub|then|until|end|while|select|case|macro|table|eeprom|enum)\\b(?![^\"]*\")",
            "name": "keyword.control.gcb",
            "color": "#569CD6",
            "bold": true,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "\\b(string|byte|word|long|integer|single)\\b(?![^\"]*\")",
            "name": "storage.type.gcb",
            "color": "#569CD6",
            "bold": false,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "(?:^|(?<=[\\s=\\+\\-\\*\\/><,:;])|\\b(?:>=|<=))[0-9]+(?:$|(?=[\\s,;)]))",
            "name": "constant.numeric.gcb",
            "color": "#FF0000",
            "bold": false,
            "italic": false,
            "case_insensitive": true
        },
        {
            "match": "\\b(us|ms|s|10ms|10us)\\b(?![^\"]*\")",
            "name": "keyword.other.unit.gcb",
            "color": "#0000FF",
            "bold": false,
            "italic": false,
            "case_insensitive": true
        }
    ]
}